#mean(as.double(subdf$winner) - 1)
#plot(seq(0, 613, 10), binout)
binout
#length(binned_outcomes)
#length(seq(0, 613, 10))
binout <- c()
#for (step in seq(0, 613, 10)) {
#    subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
#    binout <- c(binout, mean(subdf$winner - 1))
#}
#subdf <- elo_wins[elo_wins$elo_diff < 10 & elo_wins$elo_diff > 0,]
#mean(as.double(subdf$winner) - 1)
#plot(seq(0, 613, 10), binout)
seq(0, 613, 10)
binout <- c()
#for (step in seq(0, 613, 10)) {
#    subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
#    binout <- c(binout, mean(subdf$winner - 1))
#}
#subdf <- elo_wins[elo_wins$elo_diff < 10 & elo_wins$elo_diff > 0,]
#mean(as.double(subdf$winner) - 1)
#plot(seq(0, 613, 10), binout)
seq(0, 613, 10) - 1
binout <- c()
#for (step in seq(0, 613, 10)) {
#    subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
#    binout <- c(binout, mean(subdf$winner - 1))
#}
#subdf <- elo_wins[elo_wins$elo_diff < 10 & elo_wins$elo_diff > 0,]
#mean(as.double(subdf$winner) - 1)
#plot(seq(0, 613, 10), binout)
seq(0, 613, 10) - 10
binout <- c()
for (step in seq(0, 613, 10)) {
#subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
#binout <- c(binout, mean(subdf$winner - 1))
print(step - 10)
}
#subdf <- elo_wins[elo_wins$elo_diff < 10 & elo_wins$elo_diff > 0,]
#mean(as.double(subdf$winner) - 1)
#plot(seq(0, 613, 10), binout)
binout <- c()
for (step in seq(10, 613, 10)) {
#subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
#binout <- c(binout, mean(subdf$winner - 1))
print(step - 10)
}
#subdf <- elo_wins[elo_wins$elo_diff < 10 & elo_wins$elo_diff > 0,]
#mean(as.double(subdf$winner) - 1)
#plot(seq(0, 613, 10), binout)
binout <- c()
for (step in seq(10, 613, 10)) {
subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
binout <- c(binout, mean(subdf$winner - 1))
}
#subdf <- elo_wins[elo_wins$elo_diff < 10 & elo_wins$elo_diff > 0,]
#mean(as.double(subdf$winner) - 1)
#plot(seq(0, 613, 10), binout)
binout <- c()
for (step in seq(10, 613, 10)) {
subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
binout <- c(binout, mean(as.double(subdf$winner) - 1))
}
#subdf <- elo_wins[elo_wins$elo_diff < 10 & elo_wins$elo_diff > 0,]
#mean(as.double(subdf$winner) - 1)
#plot(seq(0, 613, 10), binout)
binout <- c()
for (step in seq(10, 613, 10)) {
subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
binout <- c(binout, mean(as.double(subdf$winner) - 1))
}
#subdf <- elo_wins[elo_wins$elo_diff < 10 & elo_wins$elo_diff > 0,]
#mean(as.double(subdf$winner) - 1)
plot(seq(0, 613, 10), binout)
binout <- c()
for (step in seq(10, 613, 10)) {
subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
binout <- c(binout, mean(as.double(subdf$winner) - 1))
}
#subdf <- elo_wins[elo_wins$elo_diff < 10 & elo_wins$elo_diff > 0,]
#mean(as.double(subdf$winner) - 1)
#plot(seq(0, 613, 10), binout)
length(seq(0, 613, 10))
length(binout)
binout <- c()
for (step in seq(10, 613, 10)) {
subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
binout <- c(binout, mean(as.double(subdf$winner) - 1))
}
#subdf <- elo_wins[elo_wins$elo_diff < 10 & elo_wins$elo_diff > 0,]
#mean(as.double(subdf$winner) - 1)
#plot(seq(0, 613, 10), binout)
length(seq(0, 603, 10))
length(binout)
binout <- c()
for (step in seq(10, 613, 10)) {
subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
binout <- c(binout, mean(as.double(subdf$winner) - 1))
}
#subdf <- elo_wins[elo_wins$elo_diff < 10 & elo_wins$elo_diff > 0,]
#mean(as.double(subdf$winner) - 1)
plot(seq(0, 603, 10), binout)
#length(seq(0, 603, 10))
#length(binout)
binout <- c()
for (step in seq(10, 613, 10)) {
subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
binout <- c(binout, mean(as.double(subdf$winner) - 1))
}
#subdf <- elo_wins[elo_wins$elo_diff < 10 & elo_wins$elo_diff > 0,]
#mean(as.double(subdf$winner) - 1)
plot(seq(0, 603, 10), binout)
lines(dummyx$elo_diff, preds)
#length(seq(0, 603, 10))
#length(binout)
dummyx <- data.frame(elo_diff = seq(0, 613))
preds <- predict(glm_elo, newdata = dummyx)
plot(dummyx$elo_diff, preds)
dummyx <- data.frame(elo_diff = seq(0, 613))
preds <- predict(glm_elo, newdata = dummyx, type='response')
plot(dummyx$elo_diff, preds)
binout <- c()
for (step in seq(10, 613, 10)) {
subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
binout <- c(binout, mean(as.double(subdf$winner) - 1))
}
#subdf <- elo_wins[elo_wins$elo_diff < 10 & elo_wins$elo_diff > 0,]
#mean(as.double(subdf$winner) - 1)
plot(seq(0, 603, 10), binout)
lines(dummyx$elo_diff, preds)
#length(seq(0, 603, 10))
#length(binout)
dummyx <- data.frame(elo_diff = seq(0, 613))
preds <- predict(glm_elo, newdata = dummyx, type='response')
binout <- c()
for (step in seq(10, 613, 10)) {
subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
binout <- c(binout, mean(as.double(subdf$winner) - 1))
}
plot(seq(0, 603, 10), binout,
xlab = "Elo Difference", ylab = "Probability of Higher Elo Player Win")
lines(dummyx$elo_diff, preds)
dummyx <- data.frame(elo_diff = seq(0, 613))
preds <- predict(glm_elo, newdata = dummyx, type='response')
binout <- c()
for (step in seq(10, 613, 10)) {
subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
binout <- c(binout, mean(as.double(subdf$winner) - 1))
}
plot(seq(0, 603, 10), binout,
xlab = "Elo Difference", ylab = "Probability of Higher Elo Player Win",
main = "ELO Model: Elo Diff vs Win Prob")
lines(dummyx$elo_diff, preds, col = 'r')
dummyx <- data.frame(elo_diff = seq(0, 613))
preds <- predict(glm_elo, newdata = dummyx, type='response')
binout <- c()
for (step in seq(10, 613, 10)) {
subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
binout <- c(binout, mean(as.double(subdf$winner) - 1))
}
plot(seq(0, 603, 10), binout,
xlab = "Elo Difference", ylab = "Probability of Higher Elo Player Win",
main = "ELO Model: Elo Diff vs Win Prob")
lines(dummyx$elo_diff, preds, col = 'red')
dummyx <- data.frame(elo_diff = seq(0, 613))
preds <- predict(glm_elo, newdata = dummyx, type='response')
binout <- c()
for (step in seq(10, 613, 10)) {
subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
binout <- c(binout, mean(as.double(subdf$winner) - 1))
}
plot(seq(0, 603, 10), binout,
xlab = "Elo Difference", ylab = "Probability of Higher Elo Player Win",
main = "ELO Model: Elo Diff vs Win Prob")
lines(dummyx$elo_diff, preds, col = 'red')
legend("topleft",
legend = c("Averaged Bin Outcomes", "Predicted Prob."),
col = c('black', 'red'),
pch = c(1),
lty = c(1))
dummyx <- data.frame(elo_diff = seq(0, 613))
preds <- predict(glm_elo, newdata = dummyx, type='response')
binout <- c()
for (step in seq(10, 613, 10)) {
subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
binout <- c(binout, mean(as.double(subdf$winner) - 1))
}
plot(seq(0, 603, 10), binout,
xlab = "Elo Difference", ylab = "Probability of Higher Elo Player Win",
main = "ELO Model: Elo Diff vs Win Prob")
lines(dummyx$elo_diff, preds, col = 'red')
legend("topleft",
legend = c("Averaged Bin Outcomes", "Predicted Prob."),
col = c('black', 'red'),
pch = c(1,0),
lty = c(0,1))
dummyx <- data.frame(elo_diff = seq(0, 613))
preds <- predict(glm_elo, newdata = dummyx, type='response')
binout <- c()
for (step in seq(10, 613, 10)) {
subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
binout <- c(binout, mean(as.double(subdf$winner) - 1))
}
plot(seq(0, 603, 10), binout,
xlab = "Elo Difference", ylab = "Probability of Higher Elo Player Win",
main = "ELO Model: Elo Diff vs Win Prob")
lines(dummyx$elo_diff, preds, col = 'red')
legend("topleft",
legend = c("Averaged Bin Outcomes", "Predicted Prob."),
col = c('black', 'red'),
pch = c(1,0),
lty = c(,1))
dummyx <- data.frame(elo_diff = seq(0, 613))
preds <- predict(glm_elo, newdata = dummyx, type='response')
binout <- c()
for (step in seq(10, 613, 10)) {
subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
binout <- c(binout, mean(as.double(subdf$winner) - 1))
}
plot(seq(0, 603, 10), binout,
xlab = "Elo Difference", ylab = "Probability of Higher Elo Player Win",
main = "ELO Model: Elo Diff vs Win Prob")
lines(dummyx$elo_diff, preds, col = 'red')
legend("topleft",
legend = c("Averaged Bin Outcomes", "Predicted Prob."),
col = c('black', 'red'),
pch = c(1,0),
lty = c(NA,1))
glm_class <- glm(winner ~ elo_diff + winner_class : loser_class, data = elo_wins, family = "binomial")
summary(glm_class)
elo_wins$winner <- as.factor(elo_wins$winner)
elo_wins$winner_class <- as.factor(elo_wins$winner_class)
elo_wins$loser_class <- as.factor(elo_wins$loser_class)
head(elo_wins)
elo_wins <- read.csv('elo_wins.csv')
colnames(elo_wins) <- c('elo_diff', 'lower.elo.class', 'higher.elo.class', 'winner')
elo_wins$winner <- as.factor(elo_wins$winner)
elo_wins$lower.elo.class <- as.factor(elo_wins$lower.elo.class)
elo_wins$higher.elo.class <- as.factor(elo_wins$higher.elo.class)
head(elo_wins)
glm_0 <- glm(winner ~ 1, data = elo_wins, family = "binomial")
summary(glm_0)
glm_elo <- glm(winner ~ elo_diff, data = elo_wins, family = "binomial")
summary(glm_elo)
dummyx <- data.frame(elo_diff = seq(0, 613))
preds <- predict(glm_elo, newdata = dummyx, type='response')
binout <- c()
for (step in seq(10, 613, 10)) {
subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
binout <- c(binout, mean(as.double(subdf$winner) - 1))
}
plot(seq(0, 603, 10), binout,
xlab = "Elo Difference", ylab = "Probability of Higher Elo Player Win",
main = "ELO Model: Elo Diff vs Win Prob")
lines(dummyx$elo_diff, preds, col = 'red')
legend("topleft",
legend = c("Averaged Bin Outcomes", "Predicted Prob."),
col = c('black', 'red'),
pch = c(1,0),
lty = c(NA,1))
glm_class <- glm(winner ~ elo_diff + lower.elo.class : higher.elo.class, data = elo_wins, family = "binomial")
summary(glm_class)
knitr::opts_chunk$set(echo = TRUE)
elo_wins <- read.csv('elo_wins.csv')
colnames(elo_wins) <- c('elo_diff', 'lower.elo.class', 'higher.elo.class', 'winner')
elo_wins$winner <- as.factor(elo_wins$winner)
elo_wins$lower.elo.class <- as.factor(elo_wins$lower.elo.class)
elo_wins$higher.elo.class <- as.factor(elo_wins$higher.elo.class)
head(elo_wins)
glm_0 <- glm(winner ~ 1, data = elo_wins, family = "binomial")
summary(glm_0)
glm_elo <- glm(winner ~ elo_diff, data = elo_wins, family = "binomial")
summary(glm_elo)
binnedplot(fitted(glm_elo), residuals(glm_elo, type = "response"),
xlab ="Fitted Probabilities", ylab="Averaged Residuals", pch=19, col.pts="red", cex.pts=1.5, main="Binned Residuals vs. Fitted Plot")
setwd("~/Documents/HSpring21/Stat98/final_project")
library("tidyverse")
library('aod')
library('arm')
library('caret')
elo_wins$winner <- as.factor(elo_wins$winner)
elo_wins$lower.elo.class <- as.factor(elo_wins$lower.elo.class)
elo_wins$higher.elo.class <- as.factor(elo_wins$higher.elo.class)
head(elo_wins)
elo_wins <- read.csv('elo_wins.csv')
colnames(elo_wins) <- c('elo_diff', 'lower.elo.class', 'higher.elo.class', 'winner')
elo_wins$winner <- as.factor(elo_wins$winner)
elo_wins$lower.elo.class <- as.factor(elo_wins$lower.elo.class)
elo_wins$higher.elo.class <- as.factor(elo_wins$higher.elo.class)
head(elo_wins)
glm_0 <- glm(winner ~ 1, data = elo_wins, family = "binomial")
summary(glm_0)
glm_elo <- glm(winner ~ elo_diff, data = elo_wins, family = "binomial")
summary(glm_elo)
binnedplot(fitted(glm_elo), residuals(glm_elo, type = "response"),
xlab ="Fitted Probabilities", ylab="Averaged Residuals", pch=19, col.pts="red", cex.pts=1.5, main="Binned Residuals vs. Fitted Plot")
plot(cooks.distance(glm_elo), type="h", lwd=2,
xlab="Observation index",
ylab="Cook's distances",
main="Cook's distances for Tennis data")
abline(h=1, lty=2, col="red")
anova(glm_0, glm_elo, test='Chi')
dummyx <- data.frame(elo_diff = seq(0, 613))
preds <- predict(glm_elo, newdata = dummyx, type='response')
binout <- c()
for (step in seq(10, 613, 10)) {
subdf <- elo_wins[elo_wins$elo_diff < step & elo_wins$elo_diff > (step-10),]
binout <- c(binout, mean(as.double(subdf$winner) - 1))
}
plot(seq(0, 603, 10), binout,
xlab = "Elo Difference", ylab = "Probability of Higher Elo Player Win",
main = "ELO Model: Elo Diff vs Win Prob")
lines(dummyx$elo_diff, preds, col = 'red')
legend("topleft",
legend = c("Averaged Bin Outcomes", "Predicted Prob."),
col = c('black', 'red'),
pch = c(1,0),
lty = c(NA,1))
glm_class <- glm(winner ~ elo_diff + lower.elo.class : higher.elo.class, data = elo_wins, family = "binomial")
summary(glm_class)
anova(glm_elo, glm_class, test = 'Chi')
plot(glm_class)
plot(glm_class$fitted, residuals(glm_class, type='deviance'), xlab = "fitted values",
ylab = "stanresiduals", main = "Residuals vs Fitted values",
pch = 16, ylim = c(-4,4))
abline(h = 0)
abline(h = 2, lty = 2)
abline(h = -2, lty = 2)
plot(cooks.distance(glm_class), type="h", lwd=2,
xlab="Observation index",
ylab="Cook's distances",
main="Cook's distances for Tennis data")
abline(h=1, lty=2, col="red")
binnedplot(fitted(glm_class), residuals(glm_class, type = "response"),
xlab ="Fitted Probabilities", ylab="Averaged Residuals", pch=19, col.pts="red", cex.pts=1.5, main="Binned Residuals vs. Fitted Plot")
plot(cooks.distance(glm_class), type="h", lwd=2,
xlab="Observation index",
ylab="Cook's distances",
main="Cook's distances for Tennis data")
abline(h=1, lty=2, col="red")
FedvsNad <- data.frame(elo_diff = c(2444 - 2350), lower.elo.class = c(0), higher.elo.class = c(3))
predict(glm_class, newdata = FedvsNad, type='response')
FedvsNad <- data.frame(elo_diff = c(2444 - 2350), lower.elo.class = c('0'), higher.elo.class = c('3'))
predict(glm_class, newdata = FedvsNad, type='response')
FedvsNad <- data.frame(elo_diff = c(2444 - 2350), lower.elo.class = c('3'), higher.elo.class = c('0'))
predict(glm_class, newdata = FedvsNad, type='response')
#factor("a", levels = c("a", "b"))
#FedvsNad <- data.frame(elo_diff = c(2444 - 2350), lower.elo.class = c('3'), higher.elo.class = c('0'))
#predict(glm_class, newdata = FedvsNad, type='response')
elo_wins$lower.elo.class
#factor("a", levels = c("a", "b"))
#FedvsNad <- data.frame(elo_diff = c(2444 - 2350), lower.elo.class = c('3'), higher.elo.class = c('0'))
#predict(glm_class, newdata = FedvsNad, type='response')
levels(elo_wins$lower.elo.class)
factor("0", levels = levels(elo_wins$lower.elo.class))
FedvsNad <- data.frame(elo_diff = c(2444 - 2350),
lower.elo.class = c(factor("0", levels = levels(elo_wins$lower.elo.class))),
higher.elo.class = c(factor("3", levels = levels(elo_wins$lower.elo.class))))
predict(glm_class, newdata = FedvsNad, type='response')
#factor("0", levels = levels(elo_wins$lower.elo.class))
FedvsNad <- data.frame(elo_diff = c(2444 - 2350),
lower.elo.class = c(factor("0", levels = levels(elo_wins$lower.elo.class))),
higher.elo.class = c(factor("3", levels = levels(elo_wins$lower.elo.class))))
predict(glm_class, newdata = FedvsNad, type='response')
#factor("0", levels = levels(elo_wins$lower.elo.class))
FedvsNad <- data.frame(elo_diff = c(2444 - 2350),
lower.elo.class = c("0"),
higher.elo.class = c("3"))
predict(glm_class, newdata = FedvsNad, type='response')
#factor("0", levels = levels(elo_wins$lower.elo.class))
FedvsNad <- data.frame(elo_diff = c(2444 - 2350),
lower.elo.class = c("0"),
higher.elo.class = c("3"))
predict(glm_elo, newdata = FedvsNad, type='response')
predict(glm_class, newdata = FedvsNad, type='response')
#factor("0", levels = levels(elo_wins$lower.elo.class))
FedvsNad <- data.frame(elo_diff = c(2444 - 2350),
lower.elo.class = c("0"),
higher.elo.class = c("3"))
predict(glm_elo, newdata = FedvsNad)
predict(glm_class, newdata = FedvsNad)
#factor("0", levels = levels(elo_wins$lower.elo.class))
FedvsNad <- data.frame(elo_diff = c(2444 - 2350),
lower.elo.class = c("0"),
higher.elo.class = c("3"))
predict(glm_elo, newdata = FedvsNad, type=response)
#factor("0", levels = levels(elo_wins$lower.elo.class))
FedvsNad <- data.frame(elo_diff = c(2444 - 2350),
lower.elo.class = c("0"),
higher.elo.class = c("3"))
predict(glm_elo, newdata = FedvsNad, type='response')
predict(glm_class, newdata = FedvsNad, type='response')
#factor("0", levels = levels(elo_wins$lower.elo.class))
2444 - 2350
FedvsNad <- data.frame(elo_diff = c(2444 - 2350),
lower.elo.class = c("0"),
higher.elo.class = c("3"))
predict(glm_elo, newdata = FedvsNad, type='response')
predict(glm_class, newdata = FedvsNad, type='response')
#factor("0", levels = levels(elo_wins$lower.elo.class))
# 2444 - 2350 = 94
FedvsNad <- data.frame(elo_diff = c(200),
lower.elo.class = c("0"),
higher.elo.class = c("3"))
predict(glm_elo, newdata = FedvsNad, type='response')
predict(glm_class, newdata = FedvsNad, type='response')
#factor("0", levels = levels(elo_wins$lower.elo.class))
# 2444 - 2350 = 94
FedvsNad <- data.frame(elo_diff = c(50),
lower.elo.class = c("0"),
higher.elo.class = c("3"))
predict(glm_elo, newdata = FedvsNad, type='response')
predict(glm_class, newdata = FedvsNad, type='response')
#factor("0", levels = levels(elo_wins$lower.elo.class))
# 2444 - 2350 = 94
FedvsNad <- data.frame(elo_diff = c(0),
lower.elo.class = c("0"),
higher.elo.class = c("3"))
predict(glm_elo, newdata = FedvsNad, type='response')
predict(glm_class, newdata = FedvsNad, type='response')
#factor("0", levels = levels(elo_wins$lower.elo.class))
# 2444 - 2350 = 94
FedvsNad <- data.frame(elo_diff = c(0),
lower.elo.class = c("0"),
higher.elo.class = c("3"))
predict(glm_elo, newdata = FedvsNad, type='response')
predict.glm(glm_class, newdata = FedvsNad, type='response')
glm_class <- glm(winner ~ elo_diff + lower.elo.class * higher.elo.class, data = elo_wins, family = "binomial")
summary(glm_class)
#factor("0", levels = levels(elo_wins$lower.elo.class))
# 2444 - 2350 = 94
FedvsNad <- data.frame(elo_diff = c(0),
lower.elo.class = c("0"),
higher.elo.class = c("3"))
predict(glm_elo, newdata = FedvsNad, type='response')
predict.glm(glm_class, newdata = FedvsNad, type='response')
glm_class <- glm(winner ~ elo_diff + lower.elo.class * higher.elo.class - lower.elo.class - higher.elo.class
, data = elo_wins, family = "binomial")
summary(glm_class)
glm_class <- glm(winner ~ elo_diff + lower.elo.class : higher.elo.class,
data = elo_wins, family = "binomial")
summary(glm_class)
#factor("0", levels = levels(elo_wins$lower.elo.class))
# 2444 - 2350 = 94
FedvsNad <- data.frame(elo_diff = c(0),
lower.elo.class = c("3"),
higher.elo.class = c("0"))
predict(glm_elo, newdata = FedvsNad, type='response')
predict.glm(glm_class, newdata = FedvsNad, type='response')
#factor("0", levels = levels(elo_wins$lower.elo.class))
# 2444 - 2350 = 94
FedvsNad <- data.frame(elo_diff = c(100),
lower.elo.class = c("3"),
higher.elo.class = c("0"))
predict(glm_elo, newdata = FedvsNad, type='response')
predict.glm(glm_class, newdata = FedvsNad, type='response')
#factor("0", levels = levels(elo_wins$lower.elo.class))
# 2444 - 2350 = 94
FedvsNad <- data.frame(elo_diff = c(0),
lower.elo.class = c("3"),
higher.elo.class = c("0"))
predict(glm_elo, newdata = FedvsNad, type='response')
predict.glm(glm_class, newdata = FedvsNad, type='response')
#factor("0", levels = levels(elo_wins$lower.elo.class))
# 2444 - 2350 = 94
FedvsNad <- data.frame(elo_diff = c(94),
lower.elo.class = c("0"),
higher.elo.class = c("3"))
predict(glm_elo, newdata = FedvsNad, type='response')
predict.glm(glm_class, newdata = FedvsNad, type='response')
#factor("0", levels = levels(elo_wins$lower.elo.class))
# 2444 - 2350 = 94
FedvsNad <- data.frame(elo_diff = c(0),
lower.elo.class = c("0"),
higher.elo.class = c("3"))
predict(glm_elo, newdata = FedvsNad, type='response')
predict.glm(glm_class, newdata = FedvsNad, type='response')
#factor("0", levels = levels(elo_wins$lower.elo.class))
# 2444 - 2350 = 94
FedvsNad <- data.frame(elo_diff = c(94),
lower.elo.class = c("3"),
higher.elo.class = c("0"))
predict(glm_elo, newdata = FedvsNad, type='response')
predict.glm(glm_class, newdata = FedvsNad, type='response')
#factor("0", levels = levels(elo_wins$lower.elo.class))
# 2444 - 2350 = 94
FedvsNad <- data.frame(elo_diff = c(0),
lower.elo.class = c("3"),
higher.elo.class = c("0"))
predict(glm_elo, newdata = FedvsNad, type='response')
predict.glm(glm_class, newdata = FedvsNad, type='response')
#factor("0", levels = levels(elo_wins$lower.elo.class))
# 2444 - 2350 = 94
FedvsNad <- data.frame(elo_diff = c(94),
lower.elo.class = c("3"),
higher.elo.class = c("0"))
predict(glm_elo, newdata = FedvsNad, type='response')
predict.glm(glm_class, newdata = FedvsNad, type='response')
#factor("0", levels = levels(elo_wins$lower.elo.class))
# 2444 - 2350 = 94
FedvsNad <- data.frame(elo_diff = c(94),
lower.elo.class = c("0"),
higher.elo.class = c("3"))
predict(glm_elo, newdata = FedvsNad, type='response')
predict.glm(glm_class, newdata = FedvsNad, type='response')
#factor("0", levels = levels(elo_wins$lower.elo.class))
# 2444 - 2350 = 94
FedvsNad <- data.frame(elo_diff = c(0),
lower.elo.class = c("0"),
higher.elo.class = c("3"))
predict(glm_elo, newdata = FedvsNad, type='response')
predict.glm(glm_class, newdata = FedvsNad, type='response')
