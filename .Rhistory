rat3.glm = glm(time ~ poison + treat, family=Gamma(log), data=myrats)
rat4.glm = glm(time ~ poison*treat, family=Gamma(log), data=myrats)
# anova(rat0.glm, rat1.glm, test="F")
anova(rat0.glm, rat1.glm, test="F")['Pr(>F)'][2,]
anova(rat0.glm, rat2.glm, test="F")['Pr(>F)'][2,]
anova(rat1.glm, rat3.glm, test="F")['Pr(>F)'][2,]
anova(rat2.glm, rat3.glm, test="F")['Pr(>F)'][2,]
rat0.glm = glm(time ~ 1, family=Gamma(log), data=myrats)
rat1.glm = glm(time ~ poison, family=Gamma(log), data=myrats)
rat2.glm = glm(time ~ treat, family=Gamma(log), data=myrats)
rat3.glm = glm(time ~ poison + treat, family=Gamma(log), data=myrats)
rat4.glm = glm(time ~ poison*treat, family=Gamma(log), data=myrats)
# anova(rat0.glm, rat1.glm, test="F")
anova(rat0.glm, rat1.glm, test="F")['Pr(>F)'][2,]
anova(rat0.glm, rat2.glm, test="F")['Pr(>F)'][2,]
anova(rat1.glm, rat3.glm, test="F")['Pr(>F)'][2,]
anova(rat3.glm, rat4.glm, test="F")['Pr(>F)'][2,]
rat0.glm = glm(time ~ 1, family=Gamma(log), data=myrats)
rat1.glm = glm(time ~ poison, family=Gamma(log), data=myrats)
rat2.glm = glm(time ~ treat, family=Gamma(log), data=myrats)
rat3.glm = glm(time ~ poison + treat, family=Gamma(log), data=myrats)
rat4.glm = glm(time ~ poison*treat, family=Gamma(log), data=myrats)
anova(rat0.glm, rat1.glm, test="F")
pfs <- c(anova(rat0.glm, rat1.glm, test="F")['Pr(>F)'][2,],
anova(rat0.glm, rat2.glm, test="F")['Pr(>F)'][2,],
anova(rat1.glm, rat3.glm, test="F")['Pr(>F)'][2,],
anova(rat3.glm, rat4.glm, test="F")['Pr(>F)'][2,])
dev <- c(anova(rat0.glm, rat1.glm, test="F")['Pr(>F)'][2,],
anova(rat0.glm, rat2.glm, test="F")['Pr(>F)'][2,],
anova(rat1.glm, rat3.glm, test="F")['Pr(>F)'][2,],
anova(rat3.glm, rat4.glm, test="F")['Pr(>F)'][2,])
rat0.glm = glm(time ~ 1, family=Gamma(log), data=myrats)
rat1.glm = glm(time ~ poison, family=Gamma(log), data=myrats)
rat2.glm = glm(time ~ treat, family=Gamma(log), data=myrats)
rat3.glm = glm(time ~ poison + treat, family=Gamma(log), data=myrats)
rat4.glm = glm(time ~ poison*treat, family=Gamma(log), data=myrats)
anova(rat0.glm, rat1.glm, test="F")
pfs <- c(anova(rat0.glm, rat1.glm, test="F")['Pr(>F)'][2,],
anova(rat0.glm, rat2.glm, test="F")['Pr(>F)'][2,],
anova(rat1.glm, rat3.glm, test="F")['Pr(>F)'][2,],
anova(rat3.glm, rat4.glm, test="F")['Pr(>F)'][2,])
dev <- c(anova(rat0.glm, rat1.glm, test="F")['Deviance'][2,],
anova(rat0.glm, rat2.glm, test="F")['Deviance'][2,],
anova(rat1.glm, rat3.glm, test="F")['Deviance'][2,],
anova(rat3.glm, rat4.glm, test="F")['Deviance'][2,])
rat0.glm = glm(time ~ 1, family=Gamma(log), data=myrats)
rat1.glm = glm(time ~ poison, family=Gamma(log), data=myrats)
rat2.glm = glm(time ~ treat, family=Gamma(log), data=myrats)
rat3.glm = glm(time ~ poison + treat, family=Gamma(log), data=myrats)
rat4.glm = glm(time ~ poison*treat, family=Gamma(log), data=myrats)
pfs <- c(anova(rat0.glm, rat1.glm, test="F")['Pr(>F)'][2,],
anova(rat0.glm, rat2.glm, test="F")['Pr(>F)'][2,],
anova(rat1.glm, rat3.glm, test="F")['Pr(>F)'][2,],
anova(rat3.glm, rat4.glm, test="F")['Pr(>F)'][2,])
dev <- c(anova(rat0.glm, rat1.glm, test="F")['Deviance'][2,],
anova(rat0.glm, rat2.glm, test="F")['Deviance'][2,],
anova(rat1.glm, rat3.glm, test="F")['Deviance'][2,],
anova(rat3.glm, rat4.glm, test="F")['Deviance'][2,])
eqs <- c('1, poison', '1, treat', 'poison, poison + treat', 'poison + treat, poison * treat')
table(pfs, dev, eqs)
rat0.glm = glm(time ~ 1, family=Gamma(log), data=myrats)
rat1.glm = glm(time ~ poison, family=Gamma(log), data=myrats)
rat2.glm = glm(time ~ treat, family=Gamma(log), data=myrats)
rat3.glm = glm(time ~ poison + treat, family=Gamma(log), data=myrats)
rat4.glm = glm(time ~ poison*treat, family=Gamma(log), data=myrats)
pfs <- c(anova(rat0.glm, rat1.glm, test="F")['Pr(>F)'][2,],
anova(rat0.glm, rat2.glm, test="F")['Pr(>F)'][2,],
anova(rat1.glm, rat3.glm, test="F")['Pr(>F)'][2,],
anova(rat3.glm, rat4.glm, test="F")['Pr(>F)'][2,])
dev <- c(anova(rat0.glm, rat1.glm, test="F")['Deviance'][2,],
anova(rat0.glm, rat2.glm, test="F")['Deviance'][2,],
anova(rat1.glm, rat3.glm, test="F")['Deviance'][2,],
anova(rat3.glm, rat4.glm, test="F")['Deviance'][2,])
eqs <- c('1, poison', '1, treat', 'poison, poison + treat', 'poison + treat, poison * treat')
data.frame(pfs, dev, eqs)
rat0.glm = glm(time ~ 1, family=Gamma(log), data=myrats)
rat1.glm = glm(time ~ poison, family=Gamma(log), data=myrats)
rat2.glm = glm(time ~ treat, family=Gamma(log), data=myrats)
rat3.glm = glm(time ~ poison + treat, family=Gamma(log), data=myrats)
rat4.glm = glm(time ~ poison*treat, family=Gamma(log), data=myrats)
pfs <- c(anova(rat0.glm, rat1.glm, test="F")['Pr(>F)'][2,],
anova(rat0.glm, rat2.glm, test="F")['Pr(>F)'][2,],
anova(rat1.glm, rat3.glm, test="F")['Pr(>F)'][2,],
anova(rat3.glm, rat4.glm, test="F")['Pr(>F)'][2,])
dev <- c(anova(rat0.glm, rat1.glm, test="F")['Deviance'][2,],
anova(rat0.glm, rat2.glm, test="F")['Deviance'][2,],
anova(rat1.glm, rat3.glm, test="F")['Deviance'][2,],
anova(rat3.glm, rat4.glm, test="F")['Deviance'][2,])
eqs <- c('1, poison', '1, treat', 'poison, poison + treat', 'poison + treat, poison * treat')
table = data.frame(dev, pfs)
rownames(table) <- eqs
table
pfs <- c(anova(rat0.glm, rat1.glm, test="F")['Pr(>F)'][2,],
anova(rat0.glm, rat2.glm, test="F")['Pr(>F)'][2,],
anova(rat1.glm, rat3.glm, test="F")['Pr(>F)'][2,],
anova(rat3.glm, rat4.glm, test="F")['Pr(>F)'][2,])
dev <- c(anova(rat0.glm, rat1.glm, test="F")['Deviance'][2,],
anova(rat0.glm, rat2.glm, test="F")['Deviance'][2,],
anova(rat1.glm, rat3.glm, test="F")['Deviance'][2,],
anova(rat3.glm, rat4.glm, test="F")['Deviance'][2,])
eqs <- c('1, poison', '1, treat', 'poison, poison + treat', 'poison + treat, poison * treat')
table = data.frame(dev, pfs)
rownames(table) <- eqs
table
rat0.glm = glm(time ~ 1, family=inverse.gaussian(log), data=myrats)
rat1.glm = glm(time ~ poison, family=inverse.gaussian(log), data=myrats)
rat2.glm = glm(time ~ treat, family=inverse.gaussian(log), data=myrats)
rat3.glm = glm(time ~ poison + treat, family=inverse.gaussian(log), data=myrats)
rat4.glm = glm(time ~ poison*treat, family=inverse.gaussian(log), data=myrats)
pfs <- c(anova(rat0.glm, rat1.glm, test="F")['Pr(>F)'][2,],
anova(rat0.glm, rat2.glm, test="F")['Pr(>F)'][2,],
anova(rat1.glm, rat3.glm, test="F")['Pr(>F)'][2,],
anova(rat3.glm, rat4.glm, test="F")['Pr(>F)'][2,])
dev <- c(anova(rat0.glm, rat1.glm, test="F")['Deviance'][2,],
anova(rat0.glm, rat2.glm, test="F")['Deviance'][2,],
anova(rat1.glm, rat3.glm, test="F")['Deviance'][2,],
anova(rat3.glm, rat4.glm, test="F")['Deviance'][2,])
eqs <- c('1, poison', '1, treat', 'poison, poison + treat', 'poison + treat, poison * treat')
table = data.frame(dev, pfs)
rownames(table) <- eqs
table
pfs <- c(anova(rat0.glmG, rat1.glmG, test="F")['Pr(>F)'][2,],
anova(rat0.glmG, rat2.glmG, test="F")['Pr(>F)'][2,],
anova(rat1.glmG, rat3.glmG, test="F")['Pr(>F)'][2,],
anova(rat3.glmG, rat4.glmG, test="F")['Pr(>F)'][2,])
rat0.glmG = glm(time ~ 1, family=inverse.gaussian(log), data=myrats)
rat1.glmG = glm(time ~ poison, family=inverse.gaussian(log), data=myrats)
rat2.glmG = glm(time ~ treat, family=inverse.gaussian(log), data=myrats)
rat3.glmG = glm(time ~ poison + treat, family=inverse.gaussian(log), data=myrats)
rat4.glmG = glm(time ~ poison*treat, family=inverse.gaussian(log), data=myrats)
pfs <- c(anova(rat0.glmG, rat1.glmG, test="F")['Pr(>F)'][2,],
anova(rat0.glmG, rat2.glmG, test="F")['Pr(>F)'][2,],
anova(rat1.glmG, rat3.glmG, test="F")['Pr(>F)'][2,],
anova(rat3.glmG, rat4.glmG, test="F")['Pr(>F)'][2,])
dev <- c(anova(rat0.glmG, rat1.glmG, test="F")['Deviance'][2,],
anova(rat0.glmG, rat2.glmG, test="F")['Deviance'][2,],
anova(rat1.glmG, rat3.glmG, test="F")['Deviance'][2,],
anova(rat3.glmG, rat4.glmG, test="F")['Deviance'][2,])
eqs <- c('1, poison', '1, treat', 'poison, poison + treat', 'poison + treat, poison * treat')
table = data.frame(dev, pfs)
rownames(table) <- eqs
table
summary(rat3.glm)
summary(rat3.glmG)
pfs <- c(anova(rat0.glm, rat1.glm, test="F")['Pr(>F)'][2,],
anova(rat0.glm, rat2.glm, test="F")['Pr(>F)'][2,],
anova(rat1.glm, rat3.glm, test="F")['Pr(>F)'][2,],
anova(rat3.glm, rat4.glm, test="F")['Pr(>F)'][2,])
dev <- c(anova(rat0.glm, rat1.glm, test="F")['Deviance'][2,],
anova(rat0.glm, rat2.glm, test="F")['Deviance'][2,],
anova(rat1.glm, rat3.glm, test="F")['Deviance'][2,],
anova(rat3.glm, rat4.glm, test="F")['Deviance'][2,])
eqs <- c('1, poison', '1, treat', 'poison, poison + treat', 'poison + treat, poison * treat')
table = data.frame(dev, pfs)
rownames(table) <- eqs
table
rat0.glm = glm(time ~ 1, family=Gamma(log), data=myrats)
rat1.glm = glm(time ~ poison, family=Gamma(log), data=myrats)
rat2.glm = glm(time ~ treat, family=Gamma(log), data=myrats)
rat3.glm = glm(time ~ poison + treat, family=Gamma(log), data=myrats)
rat4.glm = glm(time ~ poison*treat, family=Gamma(log), data=myrats)
pfs <- c(anova(rat0.glm, rat1.glm, test="F")['Pr(>F)'][2,],
anova(rat0.glm, rat2.glm, test="F")['Pr(>F)'][2,],
anova(rat1.glm, rat3.glm, test="F")['Pr(>F)'][2,],
anova(rat3.glm, rat4.glm, test="F")['Pr(>F)'][2,])
dev <- c(anova(rat0.glm, rat1.glm, test="F")['Deviance'][2,],
anova(rat0.glm, rat2.glm, test="F")['Deviance'][2,],
anova(rat1.glm, rat3.glm, test="F")['Deviance'][2,],
anova(rat3.glm, rat4.glm, test="F")['Deviance'][2,])
eqs <- c('1, poison', '1, treat', 'poison, poison + treat', 'poison + treat, poison * treat')
table = data.frame(dev, pfs)
rownames(table) <- eqs
table
summary(rat3.glm)
summary(rat3.glmG)
library(pscl)
help(dvisits)
head(dvisits)
visits.zinb <- zeroinfl(doctorco ~ age + agesq + illness + actdays | age + agesq + hscore,
dist="negbin", data=dvisits)
visits.hurd <- hurdle(doctorco ~ age + agesq + illness + actdays | age + agesq + hscore,
dist="negbin", data=dvisits)
rbind(obs = table(dvisits$doctorco),
z.infl = round(colSums(predict(visits.zinb, type = "prob"))),
hur = round(colSums(predict(visits.hurd, type = "prob"))))
bikes <- read.csv('bikes.csv')
head(bikes)
bikes <- read.csv('bikes.csv')
bikes$Month <- as.factor(bikes$Month)
bikes$DayOfWeek <- as.factor(bikes$DayOfWeek)
head(bikes)
bikes.nb1 = glm.nb(Count ~ Temperature + Windspeed + Humidity + Month + DayOfWeek, data=bikes)
summary(bikes.nb1)
bikes <- read.csv('bikes.csv')
bikes$Month <- as.factor(bikes$Month)
bikes$DayOfWeek <- as.factor(bikes$DayOfWeek)
bikes <- bikes[bikes$Day <= 365,]
head(bikes)
bikes.nb1 = glm.nb(Count ~ Temperature + Windspeed + Humidity + Month + DayOfWeek, data=bikes)
summary(bikes.nb1)
exp(17.7635)
exp(-17.7635)
exp(0.982)
library(MASS)
mycars = Cars93
help(Cars93)
mycars$mpg.3 = cut(mycars$MPG.city,breaks=c(0,19.5,23,100),
labels=c("low","med","high"), ordered=T)
mycars1.po = polr(mpg.3 ~ Weight+Origin+AirBags+DriveTrain, Hess=T, data=mycars)
summary(mycars1.po)
exp(-0.220792)
exp(-1.494155)
exp(0.827265)
exp(-1.668205)
anova(mycars1.po, polr(mpg.3 ~ Weight+AirBags+DriveTrain, Hess=T, data=mycars) )
anova(polr(mpg.3 ~ Weight, Hess=T, data=mycars), polr(mpg.3 ~ Weight+Origin, Hess=T, data=mycars) )
anova(mycars1.po, polr(mpg.3 ~ Weight+AirBags+DriveTrain, Hess=T, data=mycars) )
anova(polr(mpg.3 ~ Weight, Hess=T, data=mycars), polr(mpg.3 ~ Weight+Origin, Hess=T, data=mycars) )
anova(polr(mpg.3 ~ Weight, Hess=T, data=mycars), polr(mpg.3 ~ Weight+Airbags, Hess=T, data=mycars) )
anova(mycars1.po, polr(mpg.3 ~ Weight+AirBags+DriveTrain, Hess=T, data=mycars) )
anova(polr(mpg.3 ~ Weight, Hess=T, data=mycars), polr(mpg.3 ~ Weight+Origin, Hess=T, data=mycars) )
anova(polr(mpg.3 ~ Weight, Hess=T, data=mycars), polr(mpg.3 ~ Weight+AirBags, Hess=T, data=mycars) )
anova(mycars1.po, polr(mpg.3 ~ Weight+AirBags+DriveTrain, Hess=T, data=mycars) )
anova(polr(mpg.3 ~ Weight, Hess=T, data=mycars), polr(mpg.3 ~ Weight+Origin, Hess=T, data=mycars) )
anova(polr(mpg.3 ~ Weight, Hess=T, data=mycars), polr(mpg.3 ~ Weight+AirBags, Hess=T, data=mycars) )
anova(polr(mpg.3 ~ Weight, Hess=T, data=mycars), polr(mpg.3 ~ Weight+DriveTrain, Hess=T, data=mycars) )
mycars.lug1.po =  polr(mpg.3 ~ Weight+Origin+AirBags+DriveTrain+Luggage.room, Hess=T, data=mycars)
summary(mycars.lug1.po)
source('na-convert.R')
mycars.lug2.po =  polr(mpg.3 ~ Weight+Origin+AirBags+DriveTrain+Luggage.room, Hess=T, data=na.convert.mean(mycars))
summary(mycars.lug2.po)
exp(0.060425)
plot(meat.nb1$fitted, residuals(meat.nb1, type = "deviance"), xlab = "fitted values",
ylab = "deviance residuals", main = "Residuals vs Fitted values",
pch = 16, ylim = c(-4,4))
abline(h = 0)
abline(h = 2, lty = 2)
abline(h = -2, lty = 2)
library(aod)
# intercept
esoph.1 = betabin(cbind(ncases,ncontrols) ~ 1, ~ 1,data=esoph)
# intercept age
esoph.2 = betabin(cbind(ncases,ncontrols) ~ agegp, ~ 1,data=esoph)
# intercept alc
esoph.3 = betabin(cbind(ncases,ncontrols) ~ alcgp, ~ 1,data=esoph)
# intercept tob
esoph.4 = betabin(cbind(ncases,ncontrols) ~ tobgp, ~ 1,data=esoph)
# intercept age alc
esoph.5 = betabin(cbind(ncases,ncontrols) ~ agegp + alcgp, ~ 1,data=esoph)
# intercept age tob
esoph.6 = betabin(cbind(ncases,ncontrols) ~ agegp + tobgp, ~ 1,data=esoph,
control = list(maxit=10000))
# intercept alc tob
esoph.7 = betabin(cbind(ncases,ncontrols) ~ alcgp + tobgp, ~ 1,data=esoph)
# intercept age alc tob
esoph.8 = betabin(cbind(ncases,ncontrols) ~  alcgp + agegp +tobgp, ~ 1,data=esoph,
control = list(maxit=10000))
pred.bb = predict(esoph.8, type='link')
esoph.glm <- glm(cbind(ncases,ncontrols) ~ agegp + alcgp + tobgp, family=binomial, data=esoph)
pred.glm = predict(esoph.glm, type='link')
plot(pred.bb, pred.glm)
pred.bb = predict(esoph.8, type='response')
esoph.glm <- glm(cbind(ncases,ncontrols) ~ agegp + alcgp + tobgp, family=binomial, data=esoph)
pred.glm = predict(esoph.glm, type='response')
plot(pred.bb, pred.glm)
bikes <- read.csv('bikes.csv')
bikes$Month <- as.factor(bikes$Month)
bikes$DayOfWeek <- as.factor(bikes$DayOfWeek)
# Subset to only the first year
bikes <- bikes[bikes$Day <= 365,]
head(bikes)
head(bikes)
z <- bikes$Temperature - 75
z
head(bikes)
z <- bikes$Temperature - 75
z <- (z[z < 0] <- 0)
z
head(bikes)
z <- bikes$Temperature - 75
z[z < 0] <- 0)
#head(bikes)
z <- bikes$Temperature - 75
z[z < 0] <- 0
#head(bikes)
z <- bikes$Temperature - 75
z[z < 0] <- 0
z
#head(bikes)
z <- bikes$Temperature - 75
z[z < 0] <- 0
bikes$z <- z
bikes.nb2 = glm.nb(Count ~ Temperature + z + Windspeed + Humidity + Month + DayOfWeek, data=bikes)
summary(bikes.nb2)
z <- bikes$Temperature - 75
z[z < 0] <- 0
bikes$z <- z
bikes.nb2 = glm.nb(Count ~ Temperature + z + Windspeed + Humidity + Month + DayOfWeek, data=bikes)
summary(bikes.nb2)
plot(bikes.nb1$fitted, residuals(bikes.nb1, type = "deviance"), xlab = "fitted values",
ylab = "deviance residuals", main = "Residuals vs Fitted values",
pch = 16, ylim = c(-4,4))
abline(h = 0)
abline(h = 2, lty = 2)
abline(h = -2, lty = 2)
plot(bikes.nb2$fitted, residuals(bikes.nb2, type = "deviance"), xlab = "fitted values",
ylab = "deviance residuals", main = "Residuals vs Fitted values",
pch = 16, ylim = c(-4,4))
abline(h = 0)
abline(h = 2, lty = 2)
abline(h = -2, lty = 2)
mycars.lug1.po =  polr(mpg.3 ~ Weight+Origin+AirBags+DriveTrain+Luggage.room, Hess=T, data=mycars)
summary(mycars.lug1.po)
source('na-convert.R')
mycars.lug2.po =  polr(mpg.3 ~ Weight+Origin+AirBags+DriveTrain+Luggage.room+Luggage.room.na, Hess=T, data=na.convert.mean(mycars))
summary(mycars.lug2.po)
exp(-19.41)
meat.nb_0 = glm.nb(Antcount ~ 1, data=meat)
anova(glm.nb(Antcount ~ 1, data=meat), glm.nb(Antcount ~ Bread, data=meat))
anova(glm.nb(Antcount ~ 1, data=meat), glm.nb(Antcount ~ Filling, data=meat))
anova(glm.nb(Antcount ~ 1, data=meat), glm.nb(Antcount ~ Butter, data=meat))
meat.nb_0 = glm.nb(Antcount ~ 1, data=meat)
# Test intercept vs Bread
anova(glm.nb(Antcount ~ 1, data=meat), glm.nb(Antcount ~ Bread, data=meat))
# Test intercept vs Filling
anova(glm.nb(Antcount ~ 1, data=meat), glm.nb(Antcount ~ Filling, data=meat))
# Test intercept vs Butter
anova(glm.nb(Antcount ~ 1, data=meat), glm.nb(Antcount ~ Butter, data=meat))
# Test Filling vs Filling + Butter
anova(glm.nb(Antcount ~ Filling, data=meat), glm.nb(Antcount ~ Filling + Butter, data=meat))
meat.nb_0 = glm.nb(Antcount ~ 1, data=meat)
# Test intercept vs Bread
anova(glm.nb(Antcount ~ 1, data=meat), glm.nb(Antcount ~ Bread, data=meat))
# Test intercept vs Filling
anova(glm.nb(Antcount ~ 1, data=meat), glm.nb(Antcount ~ Filling, data=meat))
# Test intercept vs Butter
anova(glm.nb(Antcount ~ 1, data=meat), glm.nb(Antcount ~ Butter, data=meat))
# Test Filling vs Filling + Butter
anova(glm.nb(Antcount ~ Filling, data=meat), glm.nb(Antcount ~ Filling + Butter, data=meat))
anova(glm.nb(Antcount ~ Filling + Butter, data=meat), glm.nb(Antcount ~ Filling * Butter, data=meat))
meat.nb_0 = glm.nb(Antcount ~ 1, data=meat)
# Test intercept vs Bread
anova(glm.nb(Antcount ~ 1, data=meat), glm.nb(Antcount ~ Bread, data=meat))
# Test intercept vs Filling
anova(glm.nb(Antcount ~ 1, data=meat), glm.nb(Antcount ~ Filling, data=meat))
# Test intercept vs Butter
anova(glm.nb(Antcount ~ 1, data=meat), glm.nb(Antcount ~ Butter, data=meat))
# Test Filling vs Filling + Butter
anova(glm.nb(Antcount ~ Filling, data=meat), glm.nb(Antcount ~ Filling + Butter, data=meat))
meat.nb2 <- glm.nb(Antcount ~ Filling + Butter, data=meat)
summary(meat.nb2)
plot(rat3.glm$fitted, residuals(rat3.glm, type = "jacknife"), xlab = "fitted values",
ylab = "jacknife residuals", main = "Residuals vs Fitted values",
pch = 16, ylim = c(-4,4))
plot(rat3.glm$fitted, residuals(rat3.glm, type = "pearson"), xlab = "fitted values",
ylab = "jacknife residuals", main = "Residuals vs Fitted values",
pch = 16, ylim = c(-4,4))
abline(h = 0)
abline(h = 2, lty = 2)
abline(h = -2, lty = 2)
plot(rat3.glm$fitted, residuals(rat3.glm, type = "deviance"), xlab = "fitted values",
ylab = "jacknife residuals", main = "Residuals vs Fitted values",
pch = 16, ylim = c(-4,4))
abline(h = 0)
abline(h = 2, lty = 2)
abline(h = -2, lty = 2)
plot(rat3.glm$fitted, residuals(rat3.glm, type = "response"), xlab = "fitted values",
ylab = "jacknife residuals", main = "Residuals vs Fitted values",
pch = 16, ylim = c(-4,4))
abline(h = 0)
abline(h = 2, lty = 2)
abline(h = -2, lty = 2)
plot(rat3.glm$fitted, rstandard(rat3.glm), xlab = "fitted values",
ylab = "jacknife residuals", main = "Residuals vs Fitted values",
pch = 16, ylim = c(-4,4))
abline(h = 0)
abline(h = 2, lty = 2)
abline(h = -2, lty = 2)
plot(rat3.glm$fitted, rstandard(rat3.glm), xlab = "fitted values",
ylab = "standardized residuals", main = "Residuals vs Fitted values",
pch = 16, ylim = c(-4,4))
abline(h = 0)
abline(h = 2, lty = 2)
abline(h = -2, lty = 2)
plot(rat3.glm$fitted, residuals(rat3.glm), xlab = "fitted values",
ylab = "standardized residuals", main = "Residuals vs Fitted values",
pch = 16, ylim = c(-4,4))
abline(h = 0)
abline(h = 2, lty = 2)
abline(h = -2, lty = 2)
plot(rat3.glm$fitted, residuals(rat3.glm, type='deviance'), xlab = "fitted values",
ylab = "stanresiduals", main = "Residuals vs Fitted values",
pch = 16, ylim = c(-4,4))
abline(h = 0)
abline(h = 2, lty = 2)
abline(h = -2, lty = 2)
plot(rat3.glm$fitted, residuals(rat3.glm, type='deviance'), xlab = "fitted values",
ylab = "stanresiduals", main = "Residuals vs Fitted values",
pch = 16, ylim = c(-4,4))
abline(h = 0)
abline(h = 2, lty = 2)
abline(h = -2, lty = 2)
plot(cooks.distance(rat3.glm), type="h", lwd=2,
xlab="Observation index",
ylab="Cook's distances",
main="Cook's distances for rats data")
abline(h=1, lty=2, col="red")
summary(rat3.glm)
plot(rat3.glmG$fitted, residuals(rat3.glmG, type='deviance'), xlab = "fitted values",
ylab = "stanresiduals", main = "Residuals vs Fitted values",
pch = 16, ylim = c(-4,4))
abline(h = 0)
abline(h = 2, lty = 2)
abline(h = -2, lty = 2)
plot(cooks.distance(rat3.glmG), type="h", lwd=2,
xlab="Observation index",
ylab="Cook's distances",
main="Cook's distances for rats data")
abline(h=1, lty=2, col="red")
summary(rat3.glmG)
plot(bikes.nb1$fitted, residuals(bikes.nb1, type = "deviance"), xlab = "fitted values",
ylab = "deviance residuals", main = "Residuals vs Fitted values",
pch = 16, ylim = c(-4,4))
abline(h = 0)
abline(h = 2, lty = 2)
abline(h = -2, lty = 2)
plot(cooks.distance(bikes.nb1), type="h", lwd=2,
xlab="Observation index",
ylab="Cook's distances",
main="Cook's distances for rats data")
abline(h=1, lty=2, col="red")
bikes <- read.csv('bikes.csv')
bikes$Month <- as.factor(bikes$Month)
bikes$DayOfWeek <- as.factor(bikes$DayOfWeek)
# Subset to only the first year
bikes <- bikes[bikes$Day <= 365,]
bikes.nb1 = glm.nb(Count ~ Temperature + Windspeed + Humidity + Month + DayOfWeek, data=bikes)
summary(bikes.nb1)
plot(bikes.nb2$fitted, residuals(bikes.nb2, type = "deviance"), xlab = "fitted values",
ylab = "deviance residuals", main = "Residuals vs Fitted values",
pch = 16, ylim = c(-4,4))
abline(h = 0)
abline(h = 2, lty = 2)
abline(h = -2, lty = 2)
plot(cooks.distance(bikes.nb2), type="h", lwd=2,
xlab="Observation index",
ylab="Cook's distances",
main="Cook's distances for rats data")
abline(h=1, lty=2, col="red")
setwd("~/Documents/HSpring21/Stat98/final_project")
knitr::opts_chunk$set(echo = TRUE)
library("BradleyTerry2")
library("data.table")
library("tidyverse")
library("BradleyTerry2")
library("data.table")
library("tidyverse")
ATP_table <- read.csv('ATP_Cont_Table.csv')
#matchups100 <- matchups100[-c(1)]
#rownames(matchups100) <- colnames(matchups100)
head(ATP_table)
ATP_table <- read.csv('ATP_Cont_Table.csv')
ATP_table <- ATP_table[-c(1)]
rownames(ATP_table) <- colnames(ATP_table)
head(ATP_table)
# bt_data.sf = countsToBinomial(matchups100)
bt_data.sf = countsToBinomial(ATP_table)
bt_data.sf
#btModel <- BTm(cbind(win1, win2), player1, player2, data=bt_data.sf)
btModel <- BTm(1, win1, win2, ~ player1, player2, data=bt_data.sf)
btModel <- BTm(cbind(win1, win2), player1, player2, data=bt_data.sf)
# btModel <- BTm(1, win1, win2, ~ player1, player2, data=bt_data.sf)
#btModel <- BTm(cbind(win1, win2), p1, p2, data=bt_data)
btModel
summary(btModel)
elo_wins <- read.csv('elo_wins.csv')
head(elo_wins)
elo_wins <- read.csv('elo_wins.csv')
elo_wins$winner <- as.factor(winner)
elo_wins <- read.csv('elo_wins.csv')
elo_wins$winner <- as.factor(elo_wins$winner)
head(elo_wins)
glm_elo <- glm(winner ~ elo_diff, data = elo_wins, family = "binomial")
summary(glm_elo)
elo_wins <- read.csv('elo_wins.csv')
elo_wins[1,] <- c(-101, 0)
elo_wins$winner <- as.factor(elo_wins$winner)
head(elo_wins)
glm_elo <- glm(winner ~ elo_diff, data = elo_wins, family = "binomial")
summary(glm_elo)
elo_wins <- read.csv('elo_wins.csv')
elo_wins[1,] <- c(-101, 0)
elo_wins$winner <- as.factor(elo_wins$winner)
head(elo_wins)
elo_wins <- read.csv('elo_wins.csv')
#elo_wins[1,] <- c(-101, 0)
elo_wins$winner <- as.factor(elo_wins$winner)
head(elo_wins)
elo_wins <- read.csv('elo_wins.csv')
elo_wins[1,] <- c(-101, 1, 1, 0)
elo_wins$winner <- as.factor(elo_wins$winner)
head(elo_wins)
glm_elo <- glm(winner ~ elo_diff, data = elo_wins, family = "binomial")
summary(glm_elo)
glm_class <- glm(winner ~ ., data = elo_wins, family = "binomial")
summary(glm_class)
anova(glm_elo, glm_class)
anova(glm_elo, glm_class, test = 'Chi')
glm_0 <- glm(winner ~ 1, data = elo_wins, family = "binomial")
summary(glm_0)
glm_elo <- glm(winner ~ elo_diff, data = elo_wins, family = "binomial")
summary(glm_elo)
